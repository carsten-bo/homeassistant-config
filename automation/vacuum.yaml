- alias: "Robot: Robot started cleaning"
  # initial_state: "on"
  trigger:
    platform: state
    entity_id: vacuum.xiaomi_vacuum_cleaner
    from: "docked"
    to: "cleaning"
  action:
    - service: notify.carsten
      data:
        title: "*Rocko*"
        message: "Started to clean!"

- alias: "Robot: Robot stopped cleaning"
  initial_state: "on"
  trigger:
    platform: state
    entity_id: vacuum.xiaomi_vacuum_cleaner
    from: "returning"
    to: "docked"
  action:
    - service: notify.carsten
      data:
        title: "*Rocko*"
        message: >
          Cleanup successful after {{states.vacuum.xiaomi_vacuum_cleaner.attributes.cleaning_time}} minutes."
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.cleaned_today

- alias: "Robot: Robot cleanup if nobody is home"
  initial_state: "on"
  trigger:
    - platform: time
      at: "14:27"
    - platform: state
      entity_id: group.persons
      from: home
      to: not_home
  condition:
    condition: and
    conditions:
      - condition: time
        after: "13:00:00"
        before: "22:00:00"
        weekday:
          - mon
          - fri
      - condition: state
        entity_id: group.persons
        state: not_home
      - condition: state
        entity_id: input_boolean.cleaned_today
        state: "off"
      - condition: state
        entity_id: input_boolean.vacation_mode
        state: "off"
  action:
    - service: vacuum.start
      entity_id: vacuum.xiaomi_vacuum_cleaner

- alias: "Robot: Reset cleaned today counter"
  initial_state: "on"
  trigger:
    platform: time
    at: "01:00:00"
  action:
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.cleaned_today
